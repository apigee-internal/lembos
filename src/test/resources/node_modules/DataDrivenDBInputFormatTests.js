'use strict';

var assert = require('assert');
var Job = require('hadoop-job').Job;

function testSetBoundingQuery (format) {
  var conf = new Job().getConfiguration();
  var query = 'SELECT * FROM USERS WHERE $CONDITIONS';

  // Test wrong arguments
  try {
    format.setBoundingQuery();
  } catch (err) {
    assert.equal('Two arguments expected', err.message);
  }

  try {
    format.setBoundingQuery(conf);
  } catch (err) {
    assert.equal('Two arguments expected', err.message);
  }

  try {
    format.setBoundingQuery(null, query);
  } catch (err) {
    assert.equal('First argument is not optional', err.message);
  }

  try {
    format.setBoundingQuery(conf, null);
  } catch (err) {
    assert.equal('Second argument is not optional', err.message);
  }

  try {
    format.setBoundingQuery('conf', query);
  } catch (err) {
    assert.equal('First argument must be a Configuration object', err.message);
  }

  format.setBoundingQuery(conf, query);
}

module.exports.testDataDrivenDBInputFormat = function (format) {

  try {
    require('./DBInputFormatTests').testDBInputFormat(format);
    testSetBoundingQuery(format)
  } catch (err) {
    if (err.stack) {
      console.error(err.stack);
    }
    throw new Error(err.message);
  }

};