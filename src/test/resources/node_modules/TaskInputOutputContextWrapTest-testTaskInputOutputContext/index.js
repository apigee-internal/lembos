'use strict';

var assert = require('assert');
var Configuration = require('hadoop-configuration').Configuration;

module.exports = {
  config: {},

  map: function (key, value, context, cb) {
    // TaskInputOutputContext.getConfiguration() tests
    assert.ok(context.getConfiguration() instanceof Configuration);

    // TaskInputOutputContext.getCounter() tests
    // Test wrong number of arguments
    try {
      context.getCounter();
    } catch (err) {
      assert.equal('Two arguments expected', err.message);
    }

    try {
      context.getCounter(null, '');
    } catch (err) {
      assert.equal('First argument is not optional', err.message);
    }

    try {
      context.getCounter('', null);
    } catch (err) {
      assert.equal('Second argument is not optional', err.message);
    }

    // Make sure the counter returned is of the proper type (Counter tests are in its own module)
    assert.strictEqual('[object Counter]', context.getCounter('lembos-test', 'Test Counter').toString());

    // TaskInputOutputContext.write() with wrong number of arguments
    try {
      context.write();
    } catch (err) {
      assert.strictEqual('Two arguments expected', err.message);
    }
    cb();
  }
};
