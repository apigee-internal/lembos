package io.apigee.lembos;

import io.apigee.trireme.core.NodeModule;
import io.apigee.trireme.core.NodeRuntime;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.Function;
import org.mozilla.javascript.Scriptable;
import org.mozilla.javascript.ScriptableObject;
import org.mozilla.javascript.annotations.JSFunction;

import java.lang.reflect.InvocationTargetException;

/**
 * Implementation of {@link NodeModule} used solely to test the -libjars support for the Lembos MapReduce Runner.
 */
public final class LembosLibJarsTestModule implements NodeModule {

    /**
     * {@inheritDoc}
     */
    @Override
    public String getModuleName() {
        return "lembos-mapreduce-test-libjars";
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Scriptable registerExports(Context ctx, Scriptable scope, NodeRuntime runtime)
        throws InvocationTargetException, IllegalAccessException, InstantiationException {
        ScriptableObject.defineClass(scope, LembosLibJarsTestModuleImpl.class);

        return ctx.newObject(scope, LembosLibJarsTestModuleImpl.CLASS_NAME);
    }

    /**
     * Implementation of {@link LembosLibJarsTestModule}.
     */
    public static final class LembosLibJarsTestModuleImpl extends ScriptableObject {

        public static final String CLASS_NAME = "_lembos-mapreduce-test-libjars";

        /**
         * {@inheritDoc}
         */
        @Override
        public String getClassName() {
            return CLASS_NAME;
        }

        /**
         * Simple method to return the class name.
         *
         * @param ctx the context
         * @param thisObj the 'this' object
         * @param args the function arguments
         * @param func the function reference
         *
         */
        @JSFunction
        public static String getClassName(Context ctx, Scriptable thisObj, Object[] args, Function func) {
            return CLASS_NAME;
        }

    }

}
